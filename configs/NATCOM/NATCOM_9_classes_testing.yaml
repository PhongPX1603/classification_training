data:
  test:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: datasets.dataset
        class: DocumentClassification
        DocumentClassification:
          datadirs:
            - '''/extdata/ocr/phungpx/projects/PHUNGPX/semantic_segmentation_pytorch/dataset/NATCOM2/test/'''
            - '''/extdata/ocr/phungpx/projects/PHUNGPX/classification_pytorch/dataset/multi_classes/document_classification/VEHICLE_REGISTRATION/test/'''
          classes:
            CARD_BACK_TYPE_1: 0
            CARD_FRONT_TYPE_1: 1
            CARD_BACK_TYPE_2: 2
            CARD_FRONT_TYPE_2: 3
            CARD_BACK_TYPE_3: 4
            CARD_FRONT_TYPE_3: 5 
            PASSPORT: 6
            BLX: 7
            OTHERS: 8
          image_patterns: ['''*.*g''', '''*.*G''']
          image_size: (224, 224)
          inner_size: 256
      batch_size: 128
      pin_memory: True
      num_workers: 12
      drop_last: False
      shuffle: False

model:
  module: model.mobilenets
  class: MobileNetV3Small
  MobileNetV3Small:
    num_classes: 9
    pretrained: True
    
metric:
  module: core.handlers.evaluator
  class: Metrics
  Metrics:
    metrics:
      accuracy:
        module: core.metric.classification_metrics
        class: Metric
        Metric:
          metric_fn:
            module: core.metric.classification_metrics
            class: Accuracy
            Accuracy:
              num_classes: 9
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      loss:
        module: core.metric.loss
        class: Loss
        Loss:
          loss_fn:
            module: torch.nn
            class: CrossEntropyLoss
          output_transform: 'lambda x: (x[0], x[1])'
      confusion_matrix:
        module: core.metric.classification_metrics
        class: ConfusionMatrix
        ConfusionMatrix:
          save_dir: '''checkpoint/MNIST/2206290939/plot/'''
          classes: 9
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      precision:
        module: core.metric.classification_metric
        class: Precision
        Precision:
          num_classes: 9
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      recall:
        module: core.metric.classification_metric
        class: Recall
        Recall:
          num_classes: 9
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      f1_score:
        module: core.metric.classification_metric
        class: F1Score
        F1Score:
          num_classes: 9
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'
      confusion_matrix:
        module: core.metric.classification_metrics
        class: ConfusionMatrix
        ConfusionMatrix:
          save_dir: '''checkpoint/MNIST/2206290939/plot/'''
          classes:
            0: CARD_BACK_TYPE_1
            1: CARD_FRONT_TYPE_1
            2: CARD_BACK_TYPE_2
            3: CARD_FRONT_TYPE_2
            4: CARD_BACK_TYPE_3
            5: CARD_FRONT_TYPE_3
            6: PASSPORT
            7: BLX
            8: OTHERS
          output_transform: 'lambda x: (x[0].softmax(dim=1), x[1])'

evaluator:
  module: core.engine
  class: Evaluator
  Evaluator:
    data: config['data']['test']
    model: config['model']
    metric: config['metric']

extralibs:
  torch: torch
  logging: logging
  transforms: torchvision.transforms
